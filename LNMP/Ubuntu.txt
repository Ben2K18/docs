.vg

..extend lv
#df -h  
  /dev/mapper/vg_ora-lv_ora   99G   79G   16G  84% /ora
   
#vgdisplay
  VG Name               vg_ora 
  VG Size               200.00 GiB
  Free  PE / Size       25599 / 100.00 GiB 
    
#lvdisplay
  LV Path                /dev/vg_ora/lv_ora
  LV Name                lv_ora
  VG Name                vg_ora
  LV Size                100.00 GiB
 
#lvextend -L +40g /dev/vg_ora/lv_ora

#lvdisplay
  LV Path                /dev/vg_ora/lv_ora
  LV Name                lv_ora
  VG Name                vg_ora
  LV Size                140.00 GiB

#mount -l
 /dev/mapper/vg_ora-lv_ora on /ora type ext4 (rw,noatime,data=ordered) 
 
#resize2fs /dev/mapper/vg_ora-lv_ora 140G

#df -h  
  /dev/mapper/vg_ora-lv_ora  138G   79G   53G  60% /ora

.DVD做apt source
mount -t iso9660 -o loop ubuntu.iso /mnt/cdrom
cp /etc/apt/sources.list /etc/apt/sources.list.bak
apt-cdrom -m -d /mnt/cdrom add

.cdrecord
apt install cdrecord
cdrecord -scanbus
cdrecord -v speed=24 dev=1,0,0 -data a.iso

apt install dvd+rw-tools
growisofs -dvd-compat -Z /dev/dvd=/tmp/a.iso

apt install brasero

.分区工具
apt install gparted

.Ext

.grub
#默认加载第一个title
default=0

timeout=5

#进入grub时使用的密码(明文)
password=123456

#进入grub时使用的密码(密文方式)
# grub-md5-crypt
#   Password: xxxx
#   Retype password:xxxx
#   $1...MS0
password --md5 $1...MS0

#默认不显示grub菜单，如果要显示则需要按ESC键
hiddenmenu

title Ubuntu7.10

#root指/boot分区位置
#hd0,0 表示第一个硬盘，第一个分区

#指定启动时使用的内核
kernel /vmlinuz-2.6.22-14-generic

#引导时的初始RAMDISK, 它包含启动时kernel所需的设备驱动模块
initrd /initrd.img-2.6.22-14-generic
root (hd0,0)

quiet

.grub 交互命令
 boot
 引导已经被指定并载入的操作系统或链式装载程序
 
 chainloader
 将指定的文件做为一个链式装载程序载入， 为将启动的控制权交给某个分区用来启动的第一个扇区，可以使用+1参数来指定
 
 displaymem
 显示当前内存的使用情况
 
 initrd
 指定引导时可用的RAM盘
 
 install p
 安装grub到系统的主引导记录
 
 kernel
 指定kernel从grub的根文件系统中载入
 options选项用在kernel命令后面，在内核载入时传给内核
 
 root
 将grub的根分区设置成特定的设备和分区，如(hd0,0)
 
 rootnoverify
 同root,只是不载入分区
 
 .grub恢复
使用启动盘，进入grub控制台
grub> root (hd0,0)
grub> setup (hd0,0)

或进入系统后
假设/boot磁盘分区在/dev/sda
# grub-install /dev/sda

.nvidia显卡驱动
到http://www.nvidia.com/page/home.html下载NVIDIA-Linux-x86-..-pkgl.run
apt-get --purge remove nvidia-glx nvidia-glx-new
apt-get install build-essential pkg-config xserver-xorg-dev linux-headers-`uname -r`
vim /etc/default/linux-restricted-modules-common
在最后的双引号中添加 nv nvidia_new

/etc/init.d/gdm stop
./NVIDIA-Linux...-pkgl.run
/etc/init.d/gdm restart

.允许root登录图形系统
 系统-- 系统管理 -- 登录窗口 -- 安全 -- 允许本地系统管理员登录
 
.开机启动程序
1)图形
系统 -- 首选项 -- 会话 添加

2)命令行
 cp a.sh /etc/init.d/
 update-rc.d a.sh defaults
 update-rc.d -f a.sh remove
 
.sudo
 user localhost=(ALL) ALL
 user localhost=/usr/sbin/shutdown,/usr/sbin/halt
 %group localhost=/usr/sbin/shutdown,/usr/sbin/halt
 
 HOSt_Alias HOST=localhost,192.168.1.2
 User_Alias USER=u1,u2,u3
 Cmnd_Alias CMDS=/usr/bin/shutdown
 USER HOST=CMDS
 
 user ALL=(ALL) NOPASSWD: ALL
 
2)查看当前用户可执行的命令
  sudo -l
  
  延长密码有效时间
  sudo -v
  
  强迫用户下一次执行sudo输入密码
  sudo -k
  
.cd
cd ..
cd ~
cd -
cd -- -aa

.cp
 -a 复制时保留链接、文件属性、并递归复制目录
 -b 删除或覆盖时进行备份
 -S xxx  指定备份时的文件后缀
 -d 复制时保留链接
 -f 强制操作而不进行任何提示
 -p 复制时保留文件的修改时间、权限、所有者
 -r 复制目录时，进行递归复制
 -l 制作软件链接
 
.mkdir
  -m 700 创建目录时指定读写执行权限
  -p 一次创建多级目录
  mkdir -m 755 abc
  
.tar 
  -c 创建档案文件
  -v 显示过程
  -f 指定档案文件名
  -r 追加文件到档案文件尾部
  -t 列出档案文件内的所有文件
  -u 更换档案文件内的文件
  -x 释放档案文件中的某个文件
  -k 还原时不进行同名文件覆盖
  -m 还原时修改所有文件的修改时间为现在时间
  -M 分卷
  -z 进行gzip压缩
  -j 进行bzip2压缩
  -p 使用原文件的原来属性
  -P 可使用绝对路径进行压缩
  -N "2017/12/08" 只添加指定日期以后的文件
  --exclude FILE 不压缩FILE
  -C dir 解压到指定目录中
  tar -xzvf a.tar.gz -C /tmp/a/
  
.uname
$ uname -a
  Linux ubuntu 4.4.0-96-generic #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

$ uname -s
  Linux

$ uname -n
  ubuntu
  
$ uname -r
  4.4.0-96-generic
  
$ uname -v
  #119-Ubuntu SMP Tue Sep 12 14:59:54 UTC 2017
  
$ uname -m
$ uname -p
$ uname -i
  x86_64
  
$ uname -o
  GNU/Linux

.issue
 cat /etc/issue
 lsb_release -a
 lsmod
 
.modprobe
  modprobe -c 列出所有内核模块
  modprobe ip_tables 加载模块
  modprobe -r ip_tables 移除模块  

.cpu
 cat /proc/cpuinfo
 
.hostname

.pci
 lspci -tv
 
.usb
 lsusb -tv
 
.lsmod 

.mem
 free -m
 
.disk
 df -h
 
.size
 du -sh /tmp
 
.meminfo
$ cat /proc/meminfo 
MemTotal:        3939096 kB
MemFree:         1378428 kB
MemAvailable:    3304324 kB
Buffers:          275716 kB
Cached:          1673004 kB
SwapCached:          244 kB
 
.负载
$ uptime
$ cat /proc/loadavg

.mount
$ mount | column -t
$ fdisk -l

.swap
 swapon -s
 
.hdparm
 hdparm -i /dev/sda
 hdparm -tT /dev/sda
 
.dpkg
 dpkg -L 
 
.bash
1)
.bashrc  每次打开新的shell时要执行的命令
.bash_history 记录用户输入过的命令
.bash_logout 退出shell时要执行的命令

2)
cmd1; cmd2; cmd3
cmd1 && cmd2 && cmd3
cmd1 || cmd2 || cmd3

3)c-z
 $ cmd 
   <c-z>
 $ bg   把挂起的命令放到后台执行
 
.wget
1)镜像网站
  wget -m -k -H http://www.a.com
  
2)断点续传 
  wget -c http://www.a.com/a.zip
  
3)批量下载
  list.txt
     http://...a.swf
     http://...a.zip
     
  wget -c -i list.txt
  
4)下载目录中的所有文件
   wget -r -np -nd http://www.a.com/download/
   
5)下载所有指定扩展名的文件
   wget -r -np -nd --accept=iso http://www.a.com/i386/
   
6)使用代理
  export proxy=http://192.168.1.8:8080
  wget -Y on -p -k  http://www.a.org.cn/i386/a.iso
  
  wget -c -r -np -k -L -p -e "http_proxy=http://192.168.1.8:8080" http://www.a.org.cn/i386/a.iso
 
 7)定时下载
   at 23:00
   at> wget -c http://www.a.com/a.iso
   at> <c-d>
   
.ifconfig
 ifconfig eth0
 ethtool eth0

.hardinfo
 apt install hardinfo
 
.lshw
 
.cfdisk -a
 
.ps
 a  显示终端上的所有进程，包含其它用户的进程
 u  显示用户名
 x  显示没有控制终端的进程
 
 ps aux
 
.kill
 kill -9 1234
 pkill -9 xchat
 killall xchat
 
 .top
  命令
  A  以age执行的先后进行排序
  T  由启动的时间进行排序
  M  以占用的内存大小进行排序
  P  以所用CPU资源进行排序
  
 .lsof (list open files)
  lsof -a -p 1234 -d txt
  列出进程1234的FD标志是txt的打开的文件
  
  lsof /tmp
  列出所有打开/tmp及其下文件的进程
  
  lsof -i :21
  列出监控21端口的进程
  
  lsof -u tom
  列出tom正在使用的文件
  
  .patch
   patch -pl < path.txt
   把path.txt补充到当前目录下的代码中
   
 .ipcalc 子网计算
  apt install ipcalc
  
  ipcalc 192.168.0.1/26 
  ipcalc 192.168.0.1 255.255.255.0 
  ipcalc 192.168.0.1 0.0.0.255
  ipcalc 192.168.0.1/24
    Address:   192.168.0.1          11000000.10101000.00000000. 00000001
    Netmask:   255.255.255.0 = 24   11111111.11111111.11111111. 00000000
    Wildcard:  0.0.0.255            00000000.00000000.00000000. 11111111
 
    Network:   192.168.0.0/24       11000000.10101000.00000000. 00000000
    HostMin:   192.168.0.1          11000000.10101000.00000000. 00000001
    HostMax:   192.168.0.254        11000000.10101000.00000000. 11111110
    Broadcast: 192.168.0.255        11000000.10101000.00000000. 11111111
    Hosts/Net: 254                   Class C, Private Internet

  如果需要有55个主机的子网，如何划分
  ipcalc --split 55  192.168.0.1/24
     Netmask:   255.255.255.192 = 26 11111111.11111111.11111111.11 000000
     Network:   192.168.0.0/26       11000000.10101000.00000000.00 000000
     HostMin:   192.168.0.1          11000000.10101000.00000000.00 000001
     HostMax:   192.168.0.62         11000000.10101000.00000000.00 111110
     Broadcast: 192.168.0.63         11000000.10101000.00000000.00 111111
     Hosts/Net: 62                    Class C, Private Internet

     Needed size:  64 addresses.
     Used network: 192.168.0.0/26 (192.168.0.0 ~ 192.168.0.63)
     Unused:
       192.168.0.64/26 (192.168.0.64-192.168.0.127)
       192.168.0.128/25 (192.168.0.128-255)
